{"version":3,"sources":["hoc/withAuthRedirect.tsx","redux/users-reducer.ts","components/Navbar/Navbar.module.css","redux/app-store.ts","redux/dialogs-reducer.ts","components/common/Preloader/Preloader.module.css","components/Content/Profile/Profile.module.css","api/api.ts","components/Navbar/FriendsOnline/FriendsOnline.tsx","components/Navbar/Navbar.tsx","components/Content/News/News.tsx","components/Content/Music/Music.tsx","components/Content/Settings/Settings.tsx","assets/images/profile_avatar_placeholder.jpg","assets/images/wallpaper_01.jpg","components/Content/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Content/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Content/Profile/MyPosts/Post/Post.tsx","components/Content/Profile/MyPosts/MyPostsForm.tsx","components/Content/Profile/MyPosts/MyPosts.tsx","components/Content/Profile/MyPosts/MyPostsContainer.ts","components/Content/Profile/Profile.tsx","components/Content/Profile/ProfileContainer.tsx","assets/images/siteLogoPlaceholder_0.svg","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","login/LoginForm.tsx","login/Login.tsx","redux/app-reducer.ts","redux/redux-store.ts","App.tsx","reportWebVitals.ts","index.tsx","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","utils/validators/validators.ts","components/common/FormsControls/FormsControls.tsx","assets/images/loader.gif","components/common/Preloader/Preloader.tsx","components/common/FormsControls/FormsControls.module.css","components/Header/Header.module.css"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","props","restProps","to","TOGGLE_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_ITEMS_ON_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_FETCHING","TOGGLE_REQUEST_IS_IN_PROGRESS","initialState","users","totalUsersCount","itemsOnPage","currentPage","isFetching","followRequestsInProgress","toggleFetching","type","toggleRequestIsInProgress","userId","toggle","setCurrentPage","setItemsOnPage","setTotalUsersCount","toggleFollowThunkCreator","user","dispatch","a","id","appAPI","toggleFollow","getUsersThunkCreator","page","pageSize","getState","getUsers","response","items","totalCount","usersReducer","action","filter","map","followed","module","exports","dialogItemId1","v1","dialogItemId2","dialogItemId3","dialogItemId4","dialogItems","name","dialogMessagesData1","isMine","message","dialogMessagesData2","dialogMessagesData3","dialogMessagesData4","dialogsData","ADD_MESSAGE","SET_DIALOG_ID","activeDialogId","addMessage","dialogId","setDialogId","dialogsReducer","newMessage","trim","instance","axios","create","withCredentials","baseURL","headers","count","get","then","data","delete","resultCode","post","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","captcha","logout","getCaptcha","url","FriendsOnline","className","Style","friendsTitle","friendsOnline","friend","friendAvatar","friendName","Navbar","NavbarItem","item","activeClassName","activeLink","title","navbar","navbarItems","News","Music","Settings","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","autoFocus","onBlur","updateUserStatus","onChange","e","currentTarget","value","onDoubleClick","ProfileInfo","profile","Preloader","userAvatarSrc","photos","large","avatarPlaceholder","contacts","Object","entries","contact","i","join","src","profileWallpaper","alt","description","userAvatar","profileInfo","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_USER_STATUS","facebook","website","vk","twitter","instagram","youtube","github","mainLink","profileAvatarPlaceholder","small","postsData","likesCount","setUserStatus","profileReducer","newProfile","newPost","Math","round","random","newState","p","Post","avatar","messageContainer","likes","maxLength","setMaxLength","MyPostsReduxForm","reduxForm","form","addPostSection","onSubmit","handleSubmit","Field","placeholder","component","TextInputForm","formType","text","validate","postButton","MyPosts","React","memo","posts","values","addPost","MyPostsContainer","pageProfile","Profile","content","ProfileContainer","showMeButton","this","match","params","history","push","getProfileThunk","getUserStatus","onClick","Component","compose","authorizedUserId","withRouter","Header","header","siteLogoPlaceholder","loginBlock","SET_USER_DATA","SHOW_CAPTCHA","undefined","setAuthUserData","payload","setAuthThunk","logoutThunk","authReducer","captchaURL","HeaderContainer","LoginReduxForm","error","required","style","color","fontWeight","loginThunk","messages","length","stopSubmit","_error","margin","formData","SET_INITIALIZED","initialized","appReducer","rootReducer","combineReducers","app","pageDialogs","pageUsers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","UsersContainer","App","initializeApp","fallback","path","render","AppContainer","promise","Promise","all","AppMain","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","globalRender","ReactDOM","document","getElementById","subscribe","input","meta","hasError","touched","formControl","preloader"],"mappings":"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","file":"static/js/main.fedd0287.chunk.js","sourcesContent":["import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {StateType} from '../types/types';\r\nimport {MSTPIsAuthType} from '../components/Content/Profile/ProfileContainer';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state: StateType): MSTPIsAuthType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(WrappedComponent: ComponentType<T>) {\r\n\r\n    function RedirectComponent(props: MSTPIsAuthType) {\r\n\r\n        const {isAuth, ...restProps} = props\r\n\r\n        return !props.isAuth ?\r\n            <Redirect to='/login'/>\r\n            : <WrappedComponent {...restProps as T} />\r\n\r\n    }\r\n\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n","import {ActionTypes, AppThunk, UserType} from '../types/types';\r\nimport {appAPI} from '../api/api';\r\n\r\nconst TOGGLE_FOLLOW = 'sn01/users/TOGGLE-FOLLOW'\r\nconst SET_USERS = 'sn01/users/SET-USERS'\r\nconst SET_CURRENT_PAGE = 'sn01/users/SET-CURRENT-PAGE'\r\nconst SET_ITEMS_ON_PAGE = 'sn01/users/SET-ITEMS-ON-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'sn01/users/SET-TOTAL-USERS-COUNT'\r\nconst TOGGLE_FETCHING = 'sn01/users/TOGGLE-FETCHING'\r\nconst TOGGLE_REQUEST_IS_IN_PROGRESS = 'sn01/users/TOGGLE-REQUEST-IS-IN-PROGRESS'\r\n\r\ntype PageStateType = {\r\n    users: Array<UserType>\r\n    itemsOnPage: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followRequestsInProgress: string[]\r\n}\r\n\r\nconst initialState: PageStateType = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    itemsOnPage: 5,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followRequestsInProgress: []\r\n\r\n}\r\n\r\nconst usersReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n\r\n        case TOGGLE_FETCHING :\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        case TOGGLE_REQUEST_IS_IN_PROGRESS:\r\n\r\n            if (action.toggle) {\r\n                return {\r\n                    ...state,\r\n                    followRequestsInProgress: [...state.followRequestsInProgress, action.userId]\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    followRequestsInProgress: state.followRequestsInProgress\r\n                        .filter(id => id !== action.userId)\r\n                }\r\n            }\r\n\r\n        case TOGGLE_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(\r\n                    user => user.id === action.userId ? {...user, followed: !user.followed} : user\r\n                )\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n\r\n        case SET_ITEMS_ON_PAGE:\r\n            return {\r\n                ...state,\r\n                itemsOnPage: action.itemsOnPage\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const toggleFetching = (isFetching: boolean) => (\r\n    {\r\n        type: TOGGLE_FETCHING,\r\n        isFetching\r\n    } as const\r\n)\r\n\r\nexport const toggleRequestIsInProgress = (userId: string, toggle: boolean) => (\r\n    {\r\n        type: TOGGLE_REQUEST_IS_IN_PROGRESS,\r\n        userId,\r\n        toggle\r\n    } as const\r\n)\r\n\r\nexport const toggleFollow = (userId: string) => (\r\n    {\r\n        type: TOGGLE_FOLLOW,\r\n        userId\r\n    } as const\r\n)\r\n\r\nexport const setUsers = (users: Array<UserType>) => (\r\n    {\r\n        type: SET_USERS,\r\n        users\r\n    } as const\r\n)\r\n\r\nexport const setCurrentPage = (currentPage: number) => (\r\n    {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    } as const\r\n)\r\n\r\nexport const setItemsOnPage = (itemsOnPage: number) => (\r\n    {\r\n        type: SET_ITEMS_ON_PAGE,\r\n        itemsOnPage\r\n    } as const\r\n)\r\n\r\nexport const setTotalUsersCount = (totalUsersCount: number) => (\r\n    {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalUsersCount\r\n    } as const\r\n)\r\n\r\n// Thunks\r\n\r\nexport const toggleFollowThunkCreator = (user: UserType): AppThunk => async (dispatch) => {\r\n\r\n    dispatch(toggleRequestIsInProgress(user.id, true));\r\n\r\n    const resultCode = await appAPI.toggleFollow(user)\r\n    if (resultCode === 0) dispatch(toggleFollow(user.id))\r\n    dispatch(toggleRequestIsInProgress(user.id, false))\r\n\r\n}\r\n\r\nexport const getUsersThunkCreator = (page: number, pageSize: number): AppThunk => async (dispatch, getState) => {\r\n\r\n    dispatch(toggleFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n\r\n\r\n    const response = await appAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(toggleFetching(false))\r\n    dispatch(setUsers(response.items))\r\n    dispatch(setTotalUsersCount(response.totalCount))\r\n\r\n}\r\n\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2HCv2\",\"item\":\"Navbar_item__3ER6l\",\"activeLink\":\"Navbar_activeLink__7X-Tz\",\"friendsTitle\":\"Navbar_friendsTitle__J9E0W\",\"friendsOnline\":\"Navbar_friendsOnline__3XCCz\",\"friend\":\"Navbar_friend__2_c3q\",\"friendAvatar\":\"Navbar_friendAvatar__22v1R\",\"friendName\":\"Navbar_friendName__N3WSl\"};","import {v1} from 'uuid';\r\nimport {DialogItemType, DialogsDataType, MessageDataType} from '../types/types';\r\n\r\nconst dialogItemId1 = v1()\r\nconst dialogItemId2 = v1()\r\nconst dialogItemId3 = v1()\r\nconst dialogItemId4 = v1()\r\n\r\nexport const dialogItems: Array<DialogItemType> = [\r\n    {id: dialogItemId1, name: 'Friend 1'},\r\n    {id: dialogItemId2, name: 'Friend 2'},\r\n    {id: dialogItemId3, name: 'Friend 3'},\r\n    {id: dialogItemId4, name: 'Friend 4'},\r\n]\r\n\r\nconst dialogMessagesData1: Array<MessageDataType> = [\r\n    {id: v1(), isMine: true, message: 'Hi!'},\r\n    {id: v1(), isMine: false, message: 'Hello!'},\r\n    {id: v1(), isMine: true, message: 'Whats up?'},\r\n    {id: v1(), isMine: true, message: 'Good day!'},\r\n    {id: v1(), isMine: false, message: 'Yo!'}\r\n]\r\n\r\nconst dialogMessagesData2: Array<MessageDataType> = [\r\n    {id: v1(), isMine: false, message: 'Apple'},\r\n    {id: v1(), isMine: true, message: 'Peanut'},\r\n    {id: v1(), isMine: false, message: 'Banana'},\r\n    {id: v1(), isMine: true, message: 'Peach'},\r\n]\r\n\r\nconst dialogMessagesData3: Array<MessageDataType> = [\r\n    {id: v1(), isMine: false, message: 'Tomato'},\r\n    {id: v1(), isMine: false, message: 'Cucumber'},\r\n    {id: v1(), isMine: true, message: 'Carrot'},\r\n]\r\n\r\nconst dialogMessagesData4: Array<MessageDataType> = [\r\n    {id: v1(), isMine: false, message: 'Winter'},\r\n    {id: v1(), isMine: false, message: 'Spring'},\r\n]\r\n\r\nexport const dialogsData: DialogsDataType = {\r\n    [dialogItemId1]: dialogMessagesData1,\r\n    [dialogItemId2]: dialogMessagesData2,\r\n    [dialogItemId3]: dialogMessagesData3,\r\n    [dialogItemId4]: dialogMessagesData4\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {v1} from 'uuid';\r\nimport {ActionTypes, DialogItemType, DialogsDataType, MessageDataType} from '../types/types';\r\nimport {dialogItems, dialogsData} from './app-store';\r\n\r\nconst ADD_MESSAGE = 'sn01/dialogs/ADD-MESSAGE'\r\nconst SET_DIALOG_ID = 'sn01/dialogs/SET-DIALOG-ID'\r\n\r\ntype PageStateType = {\r\n    dialogsData: DialogsDataType\r\n    dialogItems: Array<DialogItemType>\r\n    activeDialogId: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogsData: dialogsData,\r\n    dialogItems: [...dialogItems],\r\n    activeDialogId: [...dialogItems][0].id,\r\n}\r\n\r\nconst dialogsReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_MESSAGE:\r\n\r\n            let newMessage: MessageDataType = {\r\n                id: v1(),\r\n                isMine: action.isMine,\r\n                message: (action.message && action.message.trim())? action.message : 'Test message',\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                dialogsData: {\r\n                    ...state.dialogsData,\r\n                    [action.dialogId]: [newMessage, ...state.dialogsData[action.dialogId]]\r\n                }\r\n            }\r\n\r\n        case SET_DIALOG_ID:\r\n            return {\r\n                ...state,\r\n                activeDialogId: action.id\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessage = (dialogId: string, message: string, isMine: boolean) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        dialogId,\r\n        message,\r\n        isMine\r\n    } as const\r\n}\r\n\r\nexport const setDialogId = (id: string) => {\r\n    return {\r\n        type: SET_DIALOG_ID,\r\n        id\r\n    } as const\r\n}\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3s-Qv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWallpaper\":\"Profile_profileWallpaper__3-IsL\",\"description\":\"Profile_description__10vnR\",\"userAvatar\":\"Profile_userAvatar__3VyOX\",\"profileInfo\":\"Profile_profileInfo__2mZm9\",\"fullName\":\"Profile_fullName__EbHqX\",\"aboutMe\":\"Profile_aboutMe__3jIcr\",\"lookingForAJob\":\"Profile_lookingForAJob__33rHq\",\"contacts\":\"Profile_contacts__Pf1hE\",\"showMeButton\":\"Profile_showMeButton__1PT-q\"};","import axios from 'axios';\r\nimport {UserType} from '../types/types';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '9b61cb41-6326-4a3b-b5b4-20d19c98a067'\r\n    }\r\n})\r\n\r\nexport const appAPI = {\r\n    getUsers(currentPage: number = 1, count: number = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${count}`)\r\n            .then(response => response.data)\r\n    },\r\n    toggleFollow(user: UserType) {\r\n        return !user.followed ?\r\n            (instance.post(`follow/${user.id}`, {})\r\n                .then(response => response.data.resultCode))\r\n            :\r\n            (instance.delete(`follow/${user.id}`)\r\n                .then(response => response.data.resultCode))\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, { status })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me')\r\n            .then(response => response.data)\r\n    },\r\n    login({email, password, rememberMe = false, captcha}: authLoginType) {\r\n        return instance.post('/auth/login', {email, password, rememberMe, captcha})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/login')\r\n            .then(response => response.data)\r\n    },\r\n    getCaptcha() {\r\n        return instance.get('/security/get-captcha-url')\r\n            .then(response => response.data.url)\r\n    }\r\n}\r\n\r\ntype authLoginType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha?: string\r\n}","import Style from '../Navbar.module.css';\r\nimport React from 'react';\r\n\r\nexport function FriendsOnline() {\r\n    return (\r\n        <div>\r\n            <h2 className={Style.friendsTitle}>Friends online</h2>\r\n            <div className={Style.friendsOnline}>\r\n                <div className={Style.friend}>\r\n                    <div className={Style.friendAvatar}></div>\r\n                    <span className={Style.friendName}>Joe</span>\r\n                </div>\r\n                <div className={Style.friend}>\r\n                    <div className={Style.friendAvatar}></div>\r\n                    <span className={Style.friendName}>Jack</span>\r\n                </div>\r\n                <div className={Style.friend}>\r\n                    <div className={Style.friendAvatar}></div>\r\n                    <span className={Style.friendName}>Jane</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Style from './Navbar.module.css';\r\nimport {FriendsOnline} from './FriendsOnline/FriendsOnline';\r\n\r\ntype NavbarItemPropsType = {\r\n    to: string\r\n    title: string\r\n}\r\n\r\nexport function Navbar() {\r\n\r\n    function NavbarItem(props: NavbarItemPropsType) {\r\n        return (\r\n            <div className={Style.item}>\r\n                <NavLink to={props.to}\r\n                         activeClassName={Style.activeLink}>\r\n                    {props.title}\r\n                </NavLink>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <nav className={Style.navbar}>\r\n            <div className={Style.navbarItems}>\r\n                <NavbarItem to='/profile' title='Profile'/>\r\n                <NavbarItem to='/dialogs' title='Dialogs'/>\r\n                <NavbarItem to='/news' title='News'/>\r\n                <NavbarItem to='/settings' title='Settings'/>\r\n                <NavbarItem to='/users' title='Users'/>\r\n            </div>\r\n            <FriendsOnline/>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport Style from './News.module.css';\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport function News(props: PropsType) {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Style from './Music.module.css';\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport function Music(props: PropsType) {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Style from './Settings.module.css';\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport function Settings(props: PropsType) {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/profile_avatar_placeholder.b5c6e6a0.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper_01.2c56ce24.jpg\";","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateUserStatus(status: string): void\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: ProfileStatusPropsType) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => setEditMode(true)\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const updateStatus = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ?\r\n                <div>\r\n                        <span onDoubleClick={activateEditMode}\r\n                        >{props.status || '-----'}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input autoFocus={true}\r\n                           onBlur={updateStatus}\r\n                           onChange={onStatusChange}\r\n                           value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Style from '../Profile.module.css';\r\nimport {Preloader} from '../../../common/Preloader/Preloader';\r\nimport {UserProfileType} from '../../../../types/types';\r\nimport avatarPlaceholder from '../../../../assets/images/profile_avatar_placeholder.jpg'\r\nimport profileWallpaper from '../../../../assets/images/wallpaper_01.jpg'\r\nimport {ProfileStatusWithHooks} from './ProfileStatusWithHooks';\r\n\r\n\r\ntype ProfileInfoProps = {\r\n    profile: UserProfileType | null\r\n    status: string\r\n    updateUserStatus(status: string): void\r\n}\r\n\r\nexport function ProfileInfo(props: ProfileInfoProps) {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const userAvatarSrc: string = props.profile.photos.large ? props.profile.photos.large : avatarPlaceholder\r\n\r\n    const contacts = Object.entries(props.profile.contacts).map((contact, i) => {\r\n        if (contact[1]) {\r\n            return <div key={i}><span>{contact.join(': ')}</span></div>\r\n        } else {\r\n            return null\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={profileWallpaper} alt=\"\"\r\n                     className={Style.profileWallpaper}/>\r\n            </div>\r\n            <div className={Style.description}>\r\n                <img className={Style.userAvatar} src={userAvatarSrc} alt=\"User avatar\"/>\r\n                <div className={Style.profileInfo}>\r\n                    <div className={Style.fullName}>{props.profile.fullName}</div>\r\n                    <ProfileStatusWithHooks\r\n                        status={props.status}\r\n                        updateUserStatus={props.updateUserStatus}\r\n                    />\r\n                    <div className={Style.aboutMe}>{props.profile.aboutMe}</div>\r\n                    <div className={Style.lookingForAJob}>{props.profile.lookingForAJobDescription}</div>\r\n                    <div className={Style.contacts}>{contacts}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import {v1} from 'uuid';\r\nimport {ActionTypes, AppThunk, PostsDataType, UserProfileType} from '../types/types';\r\nimport profileAvatarPlaceholder from '../assets/images/profile_avatar_placeholder.jpg'\r\nimport {profileAPI} from '../api/api';\r\n\r\nconst ADD_POST = 'sn01/profile/ADD-POST'\r\nconst DELETE_POST = 'sn01/profile/DELETE-POST'\r\nconst SET_USER_PROFILE = 'sn01/profile/SET-USER-PROFILE'\r\nconst SET_USER_STATUS = 'sn01/profile/SET-USER-STATUS'\r\n\r\ntype PageStateType = {\r\n    postsData: Array<PostsDataType>\r\n    profile: UserProfileType\r\n    status: string\r\n}\r\n\r\nexport const defaultUser: UserProfileType = {\r\n    userId: 0,\r\n    fullName: '',\r\n    aboutMe: null,\r\n    lookingForAJob: false,\r\n    lookingForAJobDescription: null,\r\n    contacts: {\r\n        facebook: null,\r\n        website: null,\r\n        vk: null,\r\n        twitter: null,\r\n        instagram: null,\r\n        youtube: null,\r\n        github: null,\r\n        mainLink: null\r\n    },\r\n    photos: {\r\n        large: profileAvatarPlaceholder,\r\n        small: null\r\n    }\r\n}\r\n\r\nlet initialState = {\r\n    profile: defaultUser,\r\n    postsData: [\r\n        {id: v1(), message: 'It\\'s my first post!', likesCount: 12},\r\n        {id: v1(), message: 'Hello!', likesCount: 432},\r\n        {id: v1(), message: 'Good day!', likesCount: 2}\r\n    ],\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_PROFILE :\r\n            const newProfile = {...action.profile}\r\n            if (!newProfile.photos.large) {\r\n                newProfile.photos.large = profileAvatarPlaceholder\r\n            }\r\n            return {...state, profile: newProfile}\r\n\r\n        case SET_USER_STATUS :\r\n            return {...state, status: action.status}\r\n\r\n        case ADD_POST:\r\n\r\n            let newPost: PostsDataType = {\r\n                id: v1(),\r\n                message: (action.message && action.message.trim()) ? action.message : 'Test message',\r\n                likesCount: Math.round(Math.random() * 1000)\r\n            }\r\n            let newState = {...state}\r\n            newState.postsData = [newPost, ...state.postsData]\r\n            return newState\r\n\r\n        case DELETE_POST:\r\n\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id !== action.id)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPost = (message: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        message\r\n    } as const\r\n}\r\n\r\nexport const deletePost = (id: string) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        id\r\n    } as const\r\n}\r\n\r\nexport const setUserProfile = (profile: UserProfileType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    } as const\r\n}\r\n\r\nexport const setUserStatus = (status: string) => {\r\n    return {\r\n        type: SET_USER_STATUS,\r\n        status\r\n    } as const\r\n}\r\n\r\n// Thunks\r\n\r\nexport const getProfileThunk = (userId: string): AppThunk => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatusThunk = (userId: string): AppThunk => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setUserStatus(response.data))\r\n}\r\n\r\nexport const updateStatusThunk = (status: string): AppThunk => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer","import React from 'react';\r\nimport Style from './Post.module.css';\r\n\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likesCount: number\r\n    avatar: string\r\n}\r\n\r\nexport function Post(props: PropsType) {\r\n\r\n    return (\r\n        <div className={Style.item}>\r\n            <img src={props.avatar}\r\n                 alt=\"avatar\"\r\n                 className={Style.avatar}\r\n            />\r\n            <div className={Style.messageContainer}>\r\n                <div className={Style.message}>\r\n                    <span>{props.message}</span>\r\n                </div>\r\n                <div className={Style.likes}>\r\n                    <span>Like ({props.likesCount} likes)</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Field, InjectedFormProps, reduxForm, SubmitHandler} from 'redux-form';\r\nimport Style from './MyPosts.module.css';\r\nimport React from 'react';\r\nimport {setMaxLength} from '../../../../utils/validators/validators';\r\nimport {TextInputForm} from '../../../common/FormsControls/FormsControls';\r\n\r\nexport type MyPostsMessagePropsType = {\r\n    handleSubmit: SubmitHandler\r\n}\r\n\r\ntype FormDataType = {\r\n    message: string\r\n}\r\n\r\nconst maxLength = setMaxLength(10)\r\n\r\nexport const MyPostsForm = (props: InjectedFormProps<FormDataType & MyPostsMessagePropsType>) => (\r\n\r\n    <div className={Style.addPostSection}>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder={'What\\'s new?'}\r\n                   name={'message'}\r\n                   component={TextInputForm}\r\n                   formType={'textarea'}\r\n                   className={Style.text}\r\n                   validate={[maxLength]}\r\n\r\n            />\r\n            <button className={Style.postButton}>\r\n                Send new post\r\n            </button>\r\n        </form>\r\n    </div>\r\n)\r\n\r\n\r\nexport const MyPostsReduxForm = reduxForm<FormDataType & MyPostsMessagePropsType>({\r\n    form: 'myPostsMessage',\r\n})(MyPostsForm)","import React from 'react';\r\nimport Style from './MyPosts.module.css';\r\nimport {Post} from './Post/Post';\r\nimport {PostsDataType, UserProfileType} from '../../../../types/types';\r\nimport {MyPostsReduxForm} from './MyPostsForm';\r\n\r\ntype MyPostsType = {\r\n    postsData: Array<PostsDataType>\r\n    addPost: (message: string) => void\r\n    profile: UserProfileType\r\n}\r\n\r\nexport const MyPosts = React.memo((props: MyPostsType) => {\r\n\r\n        const posts = props.postsData.map(p =>\r\n            <Post key={p.id}\r\n                  message={p.message}\r\n                  likesCount={p.likesCount}\r\n                  avatar={props.profile.photos.large}\r\n            />)\r\n\r\n        const addPost = (values: { message: string }) => {\r\n            props.addPost(values.message)\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <span className={Style.postButton}>My Posts</span>\r\n                <MyPostsReduxForm onSubmit={addPost}/>\r\n                <div className={Style.posts}>\r\n                    {posts}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\n","import {addPost} from '../../../../redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {StateType} from '../../../../types/types';\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return state.pageProfile\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts)","import React from 'react';\r\nimport Style from './Profile.module.css';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\nimport {UserProfileType} from '../../../types/types';\r\n\r\ntype PageProfilePropsType = {\r\n    profile: UserProfileType | null\r\n    status: string\r\n    updateUserStatus(status: string): void\r\n}\r\n\r\nexport function Profile(props:PageProfilePropsType) {\r\n\r\n\r\n\r\n    return (\r\n        <div className={Style.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Style from './Profile.module.css';\r\nimport {Profile} from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {StateType, UserProfileType} from '../../../types/types';\r\nimport {getProfileThunk, getStatusThunk, updateStatusThunk} from '../../../redux/profile-reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nexport type MDTPType = {\r\n    getProfileThunk: (userId: string) => void\r\n    getUserStatus: (userId: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport type MSTPType = {\r\n    profile: UserProfileType | null\r\n    status: string\r\n    authorizedUserId: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nexport type MSTPIsAuthType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype MatchType = {\r\n    userId: string\r\n}\r\n\r\nexport type ProfileContainerPropsType = RouteComponentProps<MatchType> & MDTPType & MSTPType\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = '2' // this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfileThunk(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    showMeButton = true\r\n\r\n    render() {\r\n        return (\r\n            <div className={Style.content}>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateUserStatus={this.props.updateUserStatus}\r\n                />\r\n                {this.showMeButton && < span\r\n                    className={Style.showMeButton}\r\n                    onClick={() => {\r\n                        this.props.getProfileThunk('13836')\r\n                        this.props.getUserStatus('13836')\r\n                        this.showMeButton = false\r\n                    }}>Me</span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MSTPType => ({\r\n    profile: state.pageProfile.profile,\r\n    status: state.pageProfile.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        {\r\n            getProfileThunk,\r\n            getUserStatus: getStatusThunk,\r\n            updateUserStatus: updateStatusThunk\r\n        }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer) as React.ComponentType","export default __webpack_public_path__ + \"static/media/siteLogoPlaceholder_0.44c654ac.svg\";","import React from 'react';\r\nimport Style from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport siteLogoPlaceholder from '../../assets/images/siteLogoPlaceholder_0.svg'\r\n\r\ntype HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    logout(): void\r\n}\r\n\r\nexport function Header(props: HeaderPropsType) {\r\n    return (\r\n        <header className={Style.header}>\r\n            <img src={siteLogoPlaceholder} alt=\"logo\"/>\r\n            <div className={Style.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to='/login'>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","import {ActionTypes, AppThunk} from '../types/types';\r\nimport {authAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\n\r\nconst SET_USER_DATA = 'sn01/auth/SET-USER-DATA'\r\nconst SHOW_CAPTCHA = 'sn01/auth/SHOW-CAPTCHA'\r\n\r\ntype AuthStateType = {\r\n    userId: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    captcha?: string\r\n}\r\n\r\nconst initialState: AuthStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captcha: undefined\r\n}\r\n\r\nconst authReducer = (state: AuthStateType = initialState, action: ActionTypes): AuthStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        case SHOW_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                captcha: action.captchaURL\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (payload: AuthStateType) => (\r\n    {\r\n        type: SET_USER_DATA,\r\n        payload\r\n    } as const\r\n)\r\n\r\nexport const showCaptcha = (captchaURL: string) => (\r\n    {\r\n        type: SHOW_CAPTCHA,\r\n        captchaURL\r\n    } as const\r\n)\r\n\r\n// Thunks\r\n\r\nexport const setAuthThunk = (): AppThunk => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data;\r\n        dispatch(setAuthUserData({userId: id, email, login, isAuth: true}))\r\n    }\r\n}\r\n\r\nexport const loginThunk = (email: string, password: string, rememberMe: boolean, captcha: string): AppThunk =>\r\n    async (dispatch) => {\r\n        const response = await authAPI.login({email, password, rememberMe});\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthThunk())\r\n        } else {\r\n            let message = response.messages.length > 0\r\n                ? response.messages[0]\r\n                : 'unknown error'\r\n            let action = stopSubmit('login', {_error: message})\r\n            dispatch(action)\r\n        }\r\n    }\r\n\r\nexport const logoutThunk = (): AppThunk =>\r\n    async (dispatch) => {\r\n        const response = await authAPI.logout()\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthUserData({userId: null, email: null, login: null, isAuth: false}))\r\n        }\r\n    }\r\n\r\nexport const getCaptchaThunk = (): AppThunk => async (dispatch) => {\r\n    const captchaURL = await authAPI.getCaptcha()\r\n        dispatch(showCaptcha(captchaURL))\r\n}\r\n\r\nexport default authReducer\r\n","import React from 'react';\r\nimport {Header} from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {StateType} from '../../types/types';\r\nimport {logoutThunk} from '../../redux/auth-reducer';\r\n\r\nexport type HeaderContainerPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    logout(): void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout: logoutThunk\r\n})(HeaderContainer)","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm, SubmitHandler} from 'redux-form';\r\nimport {TextInputForm} from '../components/common/FormsControls/FormsControls';\r\nimport {required} from '../utils/validators/validators';\r\n\r\ntype loginFormPropsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n    captcha: string\r\n    handleSubmit: SubmitHandler\r\n}\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<loginFormPropsType>> = ({handleSubmit, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'email'}\r\n                       name={'email'}\r\n                       component={TextInputForm}\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'}\r\n                       name={'password'}\r\n                       type={'password'}\r\n                       component={TextInputForm}\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            { error && <div style={{color: 'red',fontWeight: 'bold'}}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <Field type={'checkbox'}\r\n                       name={'rememberMe'}\r\n                       component={'input'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const LoginReduxForm = reduxForm<loginFormPropsType>({\r\n        form: 'login',\r\n        // initialValues: {captcha: props.captchaMSTP}\r\n    }\r\n)(LoginForm)","import React from 'react';\r\nimport {LoginReduxForm} from './LoginForm';\r\nimport {connect} from 'react-redux';\r\nimport {loginThunk, logoutThunk} from '../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {StateType} from '../types/types';\r\n\r\ntype LoginPropsType = {\r\n    loginThunk(email: string, password: string, rememberMe: boolean, captcha?: string): void\r\n    logoutThunk(): void\r\n    isAuth: boolean\r\n}\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n    captcha?: string\r\n}\r\n\r\n function Login ({loginThunk, isAuth}: LoginPropsType) {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        loginThunk(formData.email, formData.password, !!formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div style={{margin: '50px'}}>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captcha\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    loginThunk,\r\n    logoutThunk\r\n})(Login)\r\n\r\n","import {ActionTypes, AppThunk} from '../types/types';\r\nimport {setAuthThunk} from './auth-reducer';\r\n\r\n\r\nconst SET_INITIALIZED = 'sn01/app/SET-INITIALIZED'\r\n\r\ntype AppStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: AppStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state: AppStateType = initialState, action: ActionTypes): AppStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitialized = () => (\r\n    {\r\n        type: SET_INITIALIZED,\r\n    } as const\r\n)\r\n\r\n\r\n// Thunks\r\n\r\nexport const initializeApp = (): AppThunk => (dispatch) => {\r\n    let promise = dispatch(setAuthThunk())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(setInitialized())\r\n        })\r\n\r\n}\r\n\r\nexport default appReducer\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './app-reducer';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    pageProfile: profileReducer,\r\n    pageDialogs: dialogsReducer,\r\n    pageUsers: usersReducer,\r\n    form: formReducer,\r\n})\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store","import React, {Suspense} from 'react';\r\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport {Navbar} from './components/Navbar/Navbar';\r\nimport {News} from './components/Content/News/News';\r\nimport {Music} from './components/Content/Music/Music';\r\nimport {Settings} from './components/Content/Settings/Settings';\r\nimport ProfileContainer from './components/Content/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './login/Login';\r\nimport {connect, Provider} from 'react-redux';\r\nimport {initializeApp} from './redux/app-reducer';\r\nimport {compose} from 'redux';\r\nimport {StateType} from './types/types';\r\nimport {Preloader} from './components/common/Preloader/Preloader';\r\nimport store from './redux/redux-store';\r\n\r\nconst DialogsContainer = React.lazy(\r\n    () => import('./components/Content/Dialogs/DialogsContainer'))\r\n\r\nconst UsersContainer = React.lazy(\r\n    () => import('./components/Users/UsersContainer'))\r\n\r\ntype AppPropsType = {\r\n    initialized: boolean\r\n    initializeApp(): void\r\n}\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Suspense fallback={<Preloader/>}>\r\n                        <Route path=\"/login\" render={() => <Login/>}/>\r\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                        <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\r\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                        <Route path=\"/news\" component={News}/>\r\n                        <Route path=\"/music\" component={Music}/>\r\n                        <Route path=\"/settings\" component={Settings}/>\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst MSTP = (state: StateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(MSTP, {initializeApp}))(App) as React.ComponentType\r\n;\r\n\r\nconst AppMain = () => {\r\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default AppMain","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport AppMain from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store'\r\nimport {StateType} from './types/types';\r\n\r\n// export const globalRender = (state: StateType) => {\r\n//     ReactDOM.render(\r\n//         // <React.StrictMode>\r\n//         <BrowserRouter>\r\n//             <Provider store={store}>\r\n//                 <App/>\r\n//             </Provider>\r\n//         </BrowserRouter>\r\n//         // </React.StrictMode>\r\n//         ,\r\n//         document.getElementById('root')\r\n//     );\r\n// }\r\n// globalRender(store.getState())\r\n\r\nexport const globalRender = (state: StateType) => {\r\n    ReactDOM.render(\r\n        <AppMain/>\r\n        ,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nglobalRender(store.getState())\r\n\r\nstore.subscribe(() => {\r\n    let state = store.getState()\r\n    globalRender(state)\r\n})\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPostSection\":\"MyPosts_addPostSection__3MRgr\",\"text\":\"MyPosts_text__3OgMK\",\"postButton\":\"MyPosts_postButton__3vU2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3mGg9\",\"messageContainer\":\"Post_messageContainer__23h9A\",\"message\":\"Post_message__PjB5K\",\"avatar\":\"Post_avatar__3Al1l\",\"likes\":\"Post_likes__33ZPA\"};","export const required = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const setMaxLength = (length: number) => (value: string) => {\r\n    if (value && value.length > length) return ('Max length is ' + length)\r\n    return undefined\r\n}\r\n\r\nexport const formErrorPass = (error: string | undefined) => () => {\r\n    return error? 'Invalid username or password' : undefined\r\n}\r\n\r\nexport const formErrorEmail = (error: string | undefined) => () => error","import React from 'react';\r\nimport Style from './FormsControls.module.css'\r\n\r\ntype TextAreaPropsType = { // todo - fix any\r\n    input: any,\r\n    meta: any\r\n}\r\n\r\nexport const TextInputForm = ({input, meta, formType, ...props}: any) => {\r\n\r\n    const hasError = meta.error && meta.touched\r\n\r\n    return (\r\n        <div className={Style.formControl + ' ' + (hasError && Style.error)}>\r\n            <div>\r\n                {formType === 'textarea'\r\n                    ? <textarea {...input} {...props}/>\r\n                    : <input {...input} {...props}/>\r\n                }\r\n            </div>\r\n            {hasError && <span style={{color: 'red', fontWeight: 'bold'}}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loader.01b22d1d.gif\";","import Style from './Preloader.module.css';\r\nimport preloader from '../../../assets/images/loader.gif';\r\nimport React from 'react';\r\n\r\nexport function Preloader(props: any) {\r\n    return <img className={Style.preloader}\r\n                src={preloader}\r\n                alt=\"Fetching...\"/>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3pb6k\",\"error\":\"FormsControls_error__1z1zg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1NCrN\",\"loginBlock\":\"Header_loginBlock__1mbJ3\"};"],"sourceRoot":""}