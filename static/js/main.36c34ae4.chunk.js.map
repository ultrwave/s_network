{"version":3,"sources":["components/Users/Users.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","components/Content/Profile/Profile.module.css","components/Header/Header.module.css","components/Content/Dialogs/Dialogs.module.css","components/Header/Header.tsx","components/Navbar/FriendsOnline/FriendsOnline.tsx","components/Navbar/Navbar.tsx","components/Content/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Content/Profile/MyPosts/Post/Post.tsx","components/Content/Profile/MyPosts/MyPostsContainer.ts","components/Content/Profile/MyPosts/MyPosts.tsx","components/Content/Profile/Profile.tsx","components/Content/News/News.tsx","components/Content/Music/Music.tsx","components/Content/Settings/Settings.tsx","redux/store.ts","redux/dialogs-reducer.ts","components/Content/Dialogs/DialogItem/DialogItem.tsx","components/Content/Dialogs/Message/Message.tsx","components/Content/Dialogs/DialogsContainer.ts","components/Content/Dialogs/Dialogs.tsx","redux/users-reducer.ts","components/Users/UsersContainer.ts","components/Users/Users.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","components/Navbar/Navbar.module.css"],"names":["module","exports","Header","className","Style","header","src","alt","FriendsOnline","friendsTitle","friendsOnline","friend","friendAvatar","friendName","Navbar","NavbarItem","props","item","to","activeClassName","activeLink","title","navbar","navbarItems","ProfileInfo","profileImg","description","console","log","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","postsData","id","v1","message","likesCount","newPostText","profileReducer","state","action","type","newPost","newState","text","Post","avatar","messageContainer","likes","MyPostsContainer","connect","pageProfile","dispatch","inputHandler","updateNewPostTextAC","addPost","ref","current","value","trim","focus","posts","map","p","newPostRef","createRef","postButton","addPostSection","onChange","e","target","onClick","Profile","content","News","Music","Settings","dialogItemId1","dialogItemId2","dialogItemId3","dialogItemId4","dialogItems","name","dialogMessagesData1","isMine","dialogMessagesData2","dialogMessagesData3","dialogMessagesData4","dialogsData","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","SET_DIALOG_ID","activeDialogId","newMessageText","updateNewMessageTextAC","dialogsReducer","newMessage","dialogId","DialogItem","path","dialog","callback","Message","messageClass","mineMessage","msgAvatarUrl","msgName","msgAvatar","messageBox","time","DialogsContainer","pageDialogs","setDialogId","setDialogIdAC","addMessage","newMessageRef","shiftKey","addMessageAC","currentTarget","focusHandler","blurHandler","d","messages","m","dialogs","dialogsItems","dialogContent","addMessageSection","onFocus","onBlur","newMessageButton","users","usersReducer","user","userId","isFollowed","UsersContainer","pageUsers","toggleFollow","toggleFollowAC","setUsers","setUsersAC","initUsers","firstName","photoUrl","status","location","city","country","length","u","info","App","render","profile","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","globalRender","ReactDOM","StrictMode","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.36c34ae4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__1TDgl\",\"user\":\"Users_user__76rJk\",\"name\":\"Users_name__20Ntw\",\"info\":\"Users_info__1BORJ\",\"status\":\"Users_status__3nni0\",\"location\":\"Users_location__WTaV0\",\"avatar\":\"Users_avatar__2CuUe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPostSection\":\"MyPosts_addPostSection__3MRgr\",\"text\":\"MyPosts_text__3OgMK\",\"postButton\":\"MyPosts_postButton__3vU2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3mGg9\",\"messageContainer\":\"Post_messageContainer__23h9A\",\"message\":\"Post_message__PjB5K\",\"avatar\":\"Post_avatar__3Al1l\",\"likes\":\"Post_likes__33ZPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImg\":\"Profile_profileImg__PQ3Db\",\"description\":\"Profile_description__10vnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1NCrN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__dO14I\",\"dialog\":\"Dialogs_dialog__3sc7t\",\"dialogContent\":\"Dialogs_dialogContent__t8aqI\",\"avatar\":\"Dialogs_avatar__2X1bz\",\"dialogsItems\":\"Dialogs_dialogsItems__2bWrF\",\"activeLink\":\"Dialogs_activeLink__tzILA\",\"messages\":\"Dialogs_messages__1Skl5\",\"message\":\"Dialogs_message__1KdX7\",\"msgAvatar\":\"Dialogs_msgAvatar__2vpzI\",\"messageBox\":\"Dialogs_messageBox__2WzUr\",\"name\":\"Dialogs_name__1FI5b\",\"text\":\"Dialogs_text__1vEl8\",\"time\":\"Dialogs_time__Noyq6\",\"mineMessage\":\"Dialogs_mineMessage__3Seqf\",\"addMessageSection\":\"Dialogs_addMessageSection__1hkyw\",\"newMessageButton\":\"Dialogs_newMessageButton__3HXmk\"};","import React from 'react';\r\nimport Style from './Header.module.css';\r\n\r\nexport function Header() {\r\n    return (\r\n        <header className={Style.header}>\r\n            <img src=\"https://www.flaticon.com/svg/static/icons/svg/1649/1649063.svg\" alt=\"logo\"/>\r\n        </header>\r\n    )\r\n}\r\n","import Style from '../Navbar.module.css';\r\nimport React from 'react';\r\n\r\nexport function FriendsOnline() {\r\n    return (\r\n        <div>\r\n            <h2 className={Style.friendsTitle}>Friends online</h2>\r\n            <div className={Style.friendsOnline}>\r\n                <div className={Style.friend}>\r\n                    <div className={Style.friendAvatar}></div>\r\n                    <span className={Style.friendName}>Joe</span>\r\n                </div>\r\n                <div className={Style.friend}>\r\n                    <div className={Style.friendAvatar}></div>\r\n                    <span className={Style.friendName}>Jack</span>\r\n                </div>\r\n                <div className={Style.friend}>\r\n                    <div className={Style.friendAvatar}></div>\r\n                    <span className={Style.friendName}>Jane</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Style from './Navbar.module.css';\r\nimport {FriendsOnline} from './FriendsOnline/FriendsOnline';\r\n\r\ntype NavbarItemPropsType = {\r\n    to: string\r\n    title: string\r\n}\r\n\r\nexport function Navbar() {\r\n\r\n    function NavbarItem(props: NavbarItemPropsType) {\r\n        return (\r\n            <div className={Style.item}>\r\n                <NavLink to={props.to}\r\n                         activeClassName={Style.activeLink}>\r\n                    {props.title}\r\n                </NavLink>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <nav className={Style.navbar}>\r\n            <div className={Style.navbarItems}>\r\n                <NavbarItem to='/profile' title='Profile'/>\r\n                <NavbarItem to='/dialogs' title='Dialogs'/>\r\n                <NavbarItem to='/news' title='News'/>\r\n                <NavbarItem to='/settings' title='Settings'/>\r\n                <NavbarItem to='/users' title='Users'/>\r\n            </div>\r\n            <FriendsOnline/>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport Style from '../Profile.module.css';\r\n\r\ntype ProfileInfoProps = {\r\n}\r\n\r\nexport function ProfileInfo(props: ProfileInfoProps) {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"http://www.imageonemri.ca/image/w2000-c5:2/files/58532088_l.jpg\" alt=\"\" className={Style.profileImg}/>\r\n            </div>\r\n            <div className={Style.description}>\r\n                <span>Profile info</span>\r\n                {console.log('rerender')}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import {v1} from 'uuid';\r\nimport {ActionTypes, PostsDataType} from '../types/types';\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\n\r\ntype PageStateType = {\r\n    postsData: Array<PostsDataType>\r\n    newPostText: string\r\n}\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: v1(), message: 'It\\'s my first post!', likesCount: 12},\r\n        {id: v1(), message: 'Hello!', likesCount: 432},\r\n        {id: v1(), message: 'Good day!', likesCount: 2}\r\n    ],\r\n    newPostText: ''\r\n}\r\n\r\nconst profileReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_POST: // Add post (profile)\r\n            let newPost: PostsDataType = {\r\n                id: v1(),\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            }\r\n            let newState = {...state}\r\n            newState.postsData = [newPost, ...state.postsData]\r\n            newState.newPostText = ''\r\n            return newState\r\n\r\n        case UPDATE_NEW_POST_TEXT: // New post input\r\n            return {\r\n                ...state,\r\n                newPostText: action.text\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = () => {\r\n    return {\r\n        type: ADD_POST\r\n    } as const\r\n}\r\n\r\nexport const updateNewPostTextAC = (text: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        text: text\r\n    } as const\r\n\r\n}\r\n\r\nexport default profileReducer","import React from 'react';\r\nimport Style from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string;\r\n    likesCount: number;\r\n}\r\n\r\nexport function Post(props: PropsType) {\r\n    return (\r\n        <div className={Style.item}>\r\n            <img src=\"https://cdn.iconscout.com/icon/free/png-256/avatar-372-456324.png\"\r\n                 alt=\"avatar\"\r\n                 className={Style.avatar}\r\n            />\r\n            <div className={Style.messageContainer}>\r\n                <div className={Style.message}>\r\n                    <span>{props.message}</span>\r\n                </div>\r\n                <div className={Style.likes}>\r\n                    <span>Like ({props.likesCount} likes)</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {addPostAC, updateNewPostTextAC} from '../../../../redux/profile-reducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {StateType} from '../../../../types/types';\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return state.pageProfile\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => { // todo: fix type\r\n    return {\r\n        inputHandler: (text: string) => {\r\n            dispatch(updateNewPostTextAC(text))\r\n        },\r\n        addPost: (ref: any) => {\r\n            let text = ref.current?.value\r\n            if (text && text.trim()) {\r\n                dispatch(addPostAC())\r\n                if (ref.current && ref.current.value) {\r\n                    ref.current.focus()\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React, {ChangeEvent, createRef} from 'react';\r\nimport Style from './MyPosts.module.css';\r\nimport {Post} from './Post/Post';\r\nimport {PostsDataType} from '../../../../types/types';\r\n\r\ntype MyPostsType = {\r\n    postsData: Array<PostsDataType>\r\n    inputHandler: (text: string) => void\r\n    newPostText: string\r\n    addPost: (ref: any) => void // todo: fix type\r\n}\r\n\r\nexport function MyPosts(props: MyPostsType) {\r\n\r\n    const posts = props.postsData.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    const newPostRef = createRef<HTMLTextAreaElement>()\r\n\r\n    const addPost = () => props.addPost(newPostRef)\r\n\r\n    const inputHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.inputHandler(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span className={Style.postButton}>My Posts</span>\r\n            <div className={Style.addPostSection}>\r\n                <textarea ref={newPostRef}\r\n                          className={Style.text}\r\n                          value={props.newPostText}\r\n                          onChange={inputHandler}\r\n                />\r\n                <button className={Style.postButton} onClick={addPost}>Send new post</button>\r\n            </div>\r\n            <div className={Style.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Style from './Profile.module.css';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\n\r\nexport function Profile() {\r\n\r\n    return (\r\n        <div className={Style.content}>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Style from './News.module.css';\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport function News(props: PropsType) {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Style from './Music.module.css';\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport function Music(props: PropsType) {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Style from './Settings.module.css';\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport function Settings(props: PropsType) {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import {v1} from 'uuid';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport {\r\n    ActionTypes,\r\n    DialogItemType,\r\n    DialogsDataType,\r\n    MessageDataType,\r\n    PostsDataType,\r\n    StateType,\r\n    StoreType\r\n} from '../types/types';\r\n\r\n\r\n//======== TYPES ======================================================\r\n\r\n// moved to src/types/types.ts\r\n\r\n//======== DATA ======================================================\r\n\r\nconst dialogItemId1 = v1()\r\nconst dialogItemId2 = v1()\r\nconst dialogItemId3 = v1()\r\nconst dialogItemId4 = v1()\r\n\r\nexport const dialogItems: Array<DialogItemType> = [\r\n    {id: dialogItemId1, name: 'Friend 1'},\r\n    {id: dialogItemId2, name: 'Friend 2'},\r\n    {id: dialogItemId3, name: 'Friend 3'},\r\n    {id: dialogItemId4, name: 'Friend 4'},\r\n]\r\n\r\nconst dialogMessagesData1: Array<MessageDataType> = [\r\n    {id: v1(), isMine: true, message: 'Hi!'},\r\n    {id: v1(), isMine: false, message: 'Hello!'},\r\n    {id: v1(), isMine: true, message: 'Whats up?'},\r\n    {id: v1(), isMine: true, message: 'Good day!'},\r\n    {id: v1(), isMine: false, message: 'Yo!'}\r\n]\r\n\r\nconst dialogMessagesData2: Array<MessageDataType> = [\r\n    {id: v1(), isMine: false, message: 'Apple'},\r\n    {id: v1(), isMine: true, message: 'Peanut'},\r\n    {id: v1(), isMine: false, message: 'Banana'},\r\n    {id: v1(), isMine: true, message: 'Peach'},\r\n]\r\n\r\nconst dialogMessagesData3: Array<MessageDataType> = [\r\n    {id: v1(), isMine: false, message: 'Tomato'},\r\n    {id: v1(), isMine: false, message: 'Cucumber'},\r\n    {id: v1(), isMine: true, message: 'Carrot'},\r\n]\r\n\r\nconst dialogMessagesData4: Array<MessageDataType> = [\r\n    {id: v1(), isMine: false, message: 'Winter'},\r\n    {id: v1(), isMine: false, message: 'Spring'},\r\n]\r\n\r\nexport const dialogsData: DialogsDataType = {\r\n    [dialogItemId1]: dialogMessagesData1,\r\n    [dialogItemId2]: dialogMessagesData2,\r\n    [dialogItemId3]: dialogMessagesData3,\r\n    [dialogItemId4]: dialogMessagesData4\r\n}\r\n\r\nconst postsData: Array<PostsDataType> = [\r\n    {id: v1(), message: 'It\\'s my first post!', likesCount: 12},\r\n    {id: v1(), message: 'Hello!', likesCount: 432},\r\n    {id: v1(), message: 'Good day!', likesCount: 2}\r\n]\r\n\r\n//========= STORE =====================================================\r\n\r\nconst store: StoreType = {\r\n    _state: {\r\n        pageProfile: {\r\n            postsData: [...postsData],\r\n            newPostText: '',\r\n        },\r\n        pageDialogs: {\r\n            dialogsData: dialogsData,\r\n            dialogItems: [...dialogItems],\r\n            activeDialogId: [...dialogItems][0].id,\r\n            newMessageText: 'Shift+click to send as friend',\r\n        },\r\n       pageUsers: {\r\n           users: [\r\n               {\r\n                   id: v1(),\r\n                   firstName: 'StoreDmitry',\r\n                   photoUrl: 'https://cdn.iconscout.com/icon/free/png-256/avatar-370-456322.png',\r\n                   status: 'one two three',\r\n                   location: {city: 'Minsk', country: 'Belarus'},\r\n                   isFollowed: false\r\n               },\r\n               {\r\n                   id: v1(),\r\n                   firstName: 'StoreEgor',\r\n                   photoUrl: 'https://i.dlpng.com/static/png/6728131_preview.png',\r\n                   status: 'hey hey hey',\r\n                   location: {city: 'Moscow', country: 'Russia'},\r\n                   isFollowed: false\r\n               },\r\n           ],\r\n       }\r\n    },\r\n    _callSubscriber(s: StateType) {\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscribe(observer: () => void) {\r\n        this._callSubscriber = observer\r\n    },\r\n\r\n    dispatch(action: ActionTypes) {\r\n\r\n        this._state.pageProfile = profileReducer({...this._state.pageProfile}, action)\r\n        this._state.pageDialogs = dialogsReducer({...this._state.pageDialogs}, action)\r\n\r\n        this._callSubscriber(this._state)\r\n\r\n    }\r\n}\r\n\r\nexport default store\r\n\r\n\r\n\r\n","import {v1} from 'uuid';\r\nimport {ActionTypes, DialogItemType, DialogsDataType, MessageDataType} from '../types/types';\r\nimport {dialogItems, dialogsData} from './store';\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE'\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\r\nconst SET_DIALOG_ID = 'SET-DIALOG-ID' // todo - as const?\r\n\r\n// email: null as string | null // ?\r\n\r\ntype PageStateType = {\r\n    dialogsData: DialogsDataType\r\n    dialogItems: Array<DialogItemType>\r\n    newMessageText: string\r\n    activeDialogId: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogsData: dialogsData,\r\n    dialogItems: [...dialogItems],\r\n    activeDialogId: [...dialogItems][0].id,\r\n    newMessageText: 'Shift+click to send as friend',\r\n}\r\n\r\nconst dialogsReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_MESSAGE:\r\n            let newMessage: MessageDataType = {\r\n                id: v1(),\r\n                isMine: action.isMine,\r\n                message: state.newMessageText,\r\n            }\r\n            if (newMessage.message === 'Shift+click to send as friend') {\r\n                newMessage.message = 'New Message!'\r\n            }\r\n            let newState = {...state} // todo - как написать без создания новой переменной?\r\n            newState.dialogsData[action.dialogId] = [newMessage, ...newState.dialogsData[action.dialogId]]\r\n            newState.newMessageText = ''\r\n            return newState\r\n\r\n\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.text\r\n            }\r\n\r\n        case SET_DIALOG_ID:\r\n            return {\r\n                ...state,\r\n                activeDialogId: action.id\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageAC = (dialogId: string, isMine: boolean) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        dialogId: dialogId,\r\n        isMine: isMine\r\n    } as const\r\n}\r\n\r\nexport const updateNewMessageTextAC = (text: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_TEXT,\r\n        text: text\r\n    } as const\r\n}\r\n\r\nexport const setDialogIdAC = (id: string) => {\r\n    return {\r\n        type: SET_DIALOG_ID,\r\n        id: id\r\n    } as const\r\n}\r\n\r\nexport default dialogsReducer","import React from 'react';\r\nimport Style from '../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype DialogItemProps = {\r\n    dialogId: string\r\n    name: string\r\n    callback: (id: string) => void\r\n}\r\n\r\nexport function DialogItem (props: DialogItemProps) {\r\n\r\n    let path: string = '/dialogs/' + props.dialogId;\r\n\r\n    const setDialogIdCallback = () => { props.callback(props.dialogId) }\r\n\r\n    return (\r\n        <div className={Style.dialog}>\r\n            <img className={Style.avatar} src='https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png'></img>\r\n            <NavLink to={path} onClick={setDialogIdCallback} activeClassName={Style.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Style from '../Dialogs.module.css';\r\n\r\ntype MessagePropsType = {\r\n    id: string\r\n    isMine: boolean\r\n    message: string\r\n}\r\n\r\nexport function Message(props: MessagePropsType) {\r\n\r\n    const messageClass = Style.message + (props.isMine? (' ' + Style.mineMessage) : '')\r\n\r\n    const myAvatarUrl = 'https://kovadm.ru/wp-content/uploads/2020/02/avatar-placeholder.png'\r\n\r\n    const friendAvatarUrl = 'https://media.istockphoto.com/vectors/person-gray-photo-placeholder-woman-vector-id1177794485?b=1&k=6&m=1177794485&s=612x612&w=0&h=8INMsj4jnjSOComnh3-5VJPDxbO2D-0vIz1E92aR4L4='\r\n\r\n    const msgAvatarUrl =  props.isMine? myAvatarUrl : friendAvatarUrl\r\n\r\n    const msgName = props.isMine? 'Me' : 'Friend'\r\n\r\n    return (\r\n        <div className={messageClass}>\r\n            <img className={Style.msgAvatar} src={msgAvatarUrl} alt='avatar'/>\r\n            <div className={Style.messageBox}>\r\n                <span className={Style.name}>{msgName}</span>\r\n                <p className={Style.text}>{props.message}</p>\r\n                <span className={Style.time}>00.01</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport {addMessageAC, updateNewMessageTextAC, setDialogIdAC} from '../../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {StateType} from '../../../types/types';\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return state.pageDialogs\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => { // todo: fix type\r\n    return {\r\n        setDialogId: (id: string) => {\r\n            dispatch(setDialogIdAC(id))\r\n        },\r\n        addMessage: (e: React.MouseEvent<HTMLButtonElement>, newMessageRef: any, dialogId: string) => {\r\n            let text = newMessageRef.current?.value\r\n            let isMine = true\r\n            if (text && text.trim()) {\r\n                if (e.shiftKey) {\r\n                    isMine = false\r\n                }\r\n                dispatch(addMessageAC(dialogId, isMine))\r\n                if (newMessageRef.current && newMessageRef.current.value) {\r\n                    newMessageRef.current.focus()\r\n                }\r\n            }\r\n        },\r\n        inputHandler: (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n            dispatch(updateNewMessageTextAC(e.currentTarget.value))\r\n        },\r\n        focusHandler: (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n            if (e.currentTarget.value === 'Shift+click to send as friend') {\r\n                dispatch(updateNewMessageTextAC(''))\r\n            }\r\n        },\r\n        blurHandler: (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n            if (!e.currentTarget.value.trim()) {\r\n                dispatch(updateNewMessageTextAC('Shift+click to send as friend'))\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React, {ChangeEvent, createRef} from 'react';\r\nimport Style from './Dialogs.module.css';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {Message} from './Message/Message';\r\nimport {DialogItemType, DialogsDataType, MessageDataType} from '../../../types/types';\r\n\r\ntype DialogsContentType = {\r\n    dialogItems: Array<DialogItemType>\r\n    dialogsData: DialogsDataType\r\n    newMessageText: string\r\n    activeDialogId: string\r\n    setDialogId: (id: string) => void\r\n    addMessage: (e: React.MouseEvent<HTMLButtonElement>, ref: any, activeDialogId: string) => void\r\n    inputHandler: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n    focusHandler: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n    blurHandler: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nexport function Dialogs(props: DialogsContentType) {\r\n\r\n    const dialogItems = props.dialogItems.map(d => <DialogItem\r\n        key={d.id}\r\n        dialogId={d.id}\r\n        name={d.name}\r\n        callback={props.setDialogId}\r\n    />)\r\n\r\n    const messages = props.dialogsData[props.activeDialogId].map((m: MessageDataType) => <Message\r\n        key={m.id}\r\n        id={m.id}\r\n        isMine={m.isMine}\r\n        message={m.message}\r\n    />)\r\n\r\n    const newMessageRef = createRef<HTMLTextAreaElement>()\r\n\r\n    const addMessage = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        props.addMessage(e, newMessageRef, props.activeDialogId)\r\n    }\r\n\r\n    const inputHandler = props.inputHandler\r\n\r\n    const focusHandler = props.focusHandler\r\n\r\n    const blurHandler = props.blurHandler\r\n\r\n    return (\r\n        <div className={Style.dialogs}>\r\n            {console.log('dialogs rendered')}\r\n            <div className={Style.dialogsItems}>\r\n                {dialogItems}\r\n            </div>\r\n            <div className={Style.dialogContent}>\r\n                <div className={Style.dialog}>\r\n                    <div className={Style.messages}>\r\n                        {messages}\r\n                    </div>\r\n                </div>\r\n                <div className={Style.addMessageSection}>\r\n\r\n                    <textarea ref={newMessageRef}\r\n                              className={Style.text}\r\n                              value={props.newMessageText}\r\n                              onChange={inputHandler}\r\n                              onFocus={focusHandler}\r\n                              onBlur={blurHandler}\r\n                    />\r\n\r\n                    <button\r\n                        className={Style.newMessageButton}\r\n                        onClick={addMessage}>\r\n                        Send\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {ActionTypes, UserType} from '../types/types';\r\n\r\nconst TOGGLE_FOLLOW = 'TOGGLE-FOLLOW'\r\n// todo - подсвечивает case: 'TOGGLE-FOLLOW' как unreachable если убрать as const\r\nconst SET_USERS = 'SET-USERS'\r\n\r\ntype PageStateType = {\r\n    users: Array<UserType>\r\n}\r\n\r\nconst initialState: PageStateType = {\r\n    users: []\r\n}\r\n\r\nconst usersReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SET-USERS':\r\n            return {...state, users: [...state.users, ...action.users]}\r\n\r\n        case 'TOGGLE-FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(\r\n                    user => user.id === action.userId ? {...user, isFollowed: !user.isFollowed} : user\r\n                )\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const toggleFollowAC = (userId: string) => (\r\n    {\r\n        type: TOGGLE_FOLLOW,\r\n        userId\r\n    } as const\r\n)\r\n\r\nexport const setUsersAC = (users: Array<UserType>) => (\r\n    {\r\n        type: SET_USERS,\r\n        users\r\n    } as const\r\n)\r\n\r\nexport default usersReducer","import {Users} from './Users';\r\nimport {connect} from 'react-redux';\r\nimport {setUsersAC, toggleFollowAC} from '../../redux/users-reducer';\r\nimport {StateType, UserType} from '../../types/types';\r\n\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return state.pageUsers\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n    return {\r\n        toggleFollow: (userId: string) => {\r\n            dispatch(toggleFollowAC(userId))\r\n        },\r\n        setUsers: (users: Array<UserType>) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)","import React from 'react';\r\nimport Style from './Users.module.css';\r\nimport {v1} from 'uuid';\r\nimport {UserType} from '../../types/types';\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    toggleFollow: (userId: string) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n}\r\n\r\nexport function Users(props: UsersPropsType) {\r\n\r\n    const initUsers: Array<UserType> = [\r\n        {\r\n            id: v1(),\r\n            firstName: 'Dmitry',\r\n            photoUrl: 'https://cdn.iconscout.com/icon/free/png-256/avatar-370-456322.png',\r\n            status: 'one two three',\r\n            location: {city: 'Minsk', country: 'Belarus'},\r\n            isFollowed: true\r\n        },\r\n        {\r\n            id: v1(),\r\n            firstName: 'Egor',\r\n            photoUrl: 'https://cdn.iconscout.com/icon/free/png-512/manager-2506834-2130095.png',\r\n            status: 'hey hey hey',\r\n            location: {city: 'Moscow', country: 'Russia'},\r\n            isFollowed: false\r\n        },\r\n        {\r\n            id: v1(),\r\n            firstName: 'Sasha',\r\n            photoUrl: 'https://cdn.iconscout.com/icon/free/png-512/avatar-369-456321.png',\r\n            status: 'what a wonderful day!',\r\n            location: {city: 'Saint Petersburg', country: 'Russia'},\r\n            isFollowed: false\r\n        },\r\n    ]\r\n\r\n    if (props.users.length === 0) { // todo - сетает юзеров 2 раза (баг)\r\n        props.setUsers(initUsers)\r\n    }\r\n\r\n    return (\r\n        <div className={Style.users}>\r\n            {props.users.map(\r\n                u =>\r\n                    <div key={u.id} className={Style.user}>\r\n                        <div className={Style.avatar}>\r\n                            <img src={u.photoUrl} alt={u.firstName}/>\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={() => {\r\n                                props.toggleFollow(u.id)\r\n                            }}>\r\n                                {u.isFollowed ? 'Unfollow' : 'Follow'}\r\n                            </button>\r\n                        </div>\r\n                        <div className={Style.info}>\r\n                            <div className={Style.name}>{u.firstName}</div>\r\n                            <div className={Style.status}>{u.status}</div>\r\n                            <div className={Style.location}>\r\n                                <div>{u.location.country}</div>\r\n                                <div>{u.location.city}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport {Header} from './components/Header/Header';\r\nimport {Navbar} from './components/Navbar/Navbar';\r\nimport {Profile} from './components/Content/Profile/Profile';\r\nimport {News} from './components/Content/News/News';\r\nimport {Music} from './components/Content/Music/Music';\r\nimport {Settings} from './components/Content/Settings/Settings';\r\nimport {DialogsContainer} from './components/Content/Dialogs/DialogsContainer';\r\nimport {UsersContainer} from './components/Users/UsersContainer';\r\n\r\nfunction App() {\r\n\r\n    const dialogs = <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n\r\n    const profile = <Route path='/profile' render={() => <Profile/>}/>\r\n\r\n    const users = <Route path='/users' render={() => <UsersContainer/>}/>\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className='app-wrapper'>\r\n                <Header/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    {dialogs}\r\n                    {profile}\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/music' component={Music}/>\r\n                    <Route path='/settings' component={Settings}/>\r\n                    {users}\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from './users-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    pageProfile: profileReducer,\r\n    pageDialogs: dialogsReducer,\r\n    pageUsers: usersReducer,\r\n})\r\n\r\nlet store = createStore(reducers)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store'\r\nimport {Provider} from 'react-redux';\r\nimport {StateType} from './types/types';\r\n\r\nexport const globalRender = (state: StateType) => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App\r\n                    // state={state}\r\n                    // dispatch={store.dispatch.bind(store)}\r\n                />\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\nglobalRender(store.getState())\r\n\r\nstore.subscribe(() => {\r\n    let state = store.getState()\r\n    globalRender(state)\r\n})\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2HCv2\",\"item\":\"Navbar_item__3ER6l\",\"activeLink\":\"Navbar_activeLink__7X-Tz\",\"friendsTitle\":\"Navbar_friendsTitle__J9E0W\",\"friendsOnline\":\"Navbar_friendsOnline__3XCCz\",\"friend\":\"Navbar_friend__2_c3q\",\"friendAvatar\":\"Navbar_friendAvatar__22v1R\",\"friendName\":\"Navbar_friendName__N3WSl\"};"],"sourceRoot":""}